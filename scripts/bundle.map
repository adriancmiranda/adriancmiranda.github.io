{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/Proto/dist/Proto.pilot.js",
    "node_modules/console.js/trace.js",
    "scripts/ambox/index.js",
    "scripts/index.js",
    "scripts/portifa/states.js"
  ],
  "names": [],
  "mappingslEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "//     Proto.js v1.0.3\n\n//     (c) 2015-2016 Adrian C. Miranda\n//     Proto may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://ambox.github.io\n(function(global, name, version, factory){\n  'use strict';\n\n  /* globals define:false, module:false */\n  if(typeof module === 'object' && typeof module.exports === 'object'){\n\n    // Set up for Node.js or CommonJS.\n    global[name] = module.exports = factory(global, exports, name, version);\n\n  }else if(typeof define === 'function' && define.amd){\n\n    // Next for module appropriately for the environment. Start with AMD.\n    define(['exports'], function(exports){\n      return factory(global, exports, name, version);\n    });\n\n  }else{\n\n    // Finally, as a browser global.\n    global[name] = factory(global, {}, name, version);\n\n  }\n\n}(typeof window !== 'undefined'? window : this, 'Proto', '1.0.3', function(global, exports, name, version){\n  'use strict';\n\n  // Helpers\n  // -------\n\n  function ape(fn){\n    return function(){\n      return Function.call.apply(fn, arguments);\n    };\n  }\n\n  var slice = ape(Array.prototype.slice);\n\n  var isArray = Array.isArray;\n\n  var toStr = ape(Object.prototype.toString);\n\n  var reSuper = /\\bsuper\\b/;\n\n  var reFnDeclaration = /^.*function\\s([^\\s]*|[^\\(]*)\\([^\\x00]+$/;\n\n  var reObjectWrapper = /^(\\[object(\\s|\\uFEFF|\\xA0))|(\\])$/g;\n\n  var numInstances = 0;\n\n  function isLikeObject(value){\n    return value === Object(value);\n  }\n\n  function isObject(value){\n    return toStr(value) === '[object Object]';\n  }\n\n  function isFunction(value){\n    return typeof value === 'function';\n  }\n\n  function isString(value){\n    return typeof value === 'string';\n  }\n\n  function iteraction(ctx, key, value, index, getEnum, fn){\n    if(getEnum || value.hasOwnProperty(key)){\n      return fn.call(ctx || value[key], value[key], key, index, value);\n    }\n  }\n\n  function each(value, fn, ctx, getEnum){\n    var ctr, index = 0, isFn = isFunction(value);\n    for(var key in value){\n      ctr = isFn? key !== 'prototype' && key !== 'length' && key !== 'name' : true;\n      if(ctr && iteraction(ctx, key, value, index++, getEnum, fn) === false){\n        break;\n      }\n    }\n  }\n\n  function copy(child){\n    var Clone = function(){};\n    Clone.prototype = child && child.prototype || child;\n    return new Clone();\n  }\n\n  function create(child, properties){\n    if(child === null){return {};}\n    var Child = function(){};\n    Child.prototype = child;\n    child = new Child();\n    each(properties, function(value, property){\n      child[property] = value.value;\n    });\n    return child;\n  }\n\n  if(!isFunction(Object.create)){\n    Object.create = create;\n  }\n\n  function merge(overwrite, target){\n    var args = slice(arguments, 2);\n    each(args, function(parameter){\n      each(parameter, function(value, key){\n        if(isObject(value) && isObject(target[key])){\n          merge(overwrite, target[key], value);\n        }else if(overwrite || !target[key]){\n          target[key] = value;\n        }\n      }, null, true);\n    });\n    return target;\n  }\n\n  function shallowMerge(target){\n    var args = slice(arguments, 1);\n    each(args, function(parameter){\n      each(parameter, function(value, key){\n        target[key] = value;\n      });\n    });\n    return target;\n  }\n\n  function copyShallowObjectsFrom(child){\n    var copy = {};\n    each(child, function(value, key){\n      if(isObject(value)){\n        copy[key] = value;\n      }\n    }, null, true);\n    return copy;\n  }\n\n  function keys(object, getEnum){\n    var properties = [];\n    each(object, function(value, key){\n      properties.push(key);\n    }, null, getEnum);\n    return properties;\n  }\n\n  function overload(target, name, fn){\n    var cache = target[name];\n    target[name] = function(){\n      if(fn.length === arguments.length){\n        return fn.apply(this, arguments);\n      }else if(isFunction(cache)){\n        return cache.apply(this, arguments);\n      }\n    };\n  }\n\n  function flush(object){\n    for(var key in object){\n      if(object.hasOwnProperty(key)){\n        delete object[key];\n      }\n    }\n  }\n\n  function bind(fn, context){\n    var args = slice(arguments, 2);\n    var proxy = function(){\n      return fn.apply(context, args.concat(slice(arguments)));\n    };\n    proxy.__bind__ = proxy.__bind__ || fn;\n    return proxy;\n  }\n\n  function unbind(fn){\n    var cache = fn.__bind__;\n    delete fn.__bind__;\n    return cache;\n  }\n\n  function mapContext(fn, context, methods){\n    methods = methods.length? methods : keys(context, true);\n    each(methods, function(method){\n      if(isFunction(context[method])){\n        context[method] = fn(context[method], context);\n      }\n    });\n    return context;\n  }\n\n  function bindAll(context, methods){\n    methods = isArray(methods)? methods : slice(arguments, 1);\n    return mapContext(bind, context, methods);\n  }\n\n  function unbindAll(context, methods){\n    methods = isArray(methods)? methods : slice(arguments, 1);\n    return mapContext(unbind, context, methods);\n  }\n\n  function createSuperMethod(action, value){\n    var pointer = isFunction(value)? value : function $super(){\n      return value;\n    };\n    return function Class(){\n      this.super = pointer;\n      return action.apply(this, arguments);\n    };\n  }\n\n  function hasSuperCall(fn){\n    return isFunction(fn) && reSuper.test(fn.toString());\n  }\n\n  function injectMethod(parent, child, fn, key){\n    if(hasSuperCall(fn) && isLikeObject(parent)){\n      child[key] = createSuperMethod(fn, parent[key]);\n    }else{\n      child[key] = fn;\n    }\n  }\n\n  function enableSuperMethods(parent, child){\n    each(child, bind(injectMethod, null, parent, child));\n    return child;\n  }\n\n  function inherit(Proto, parent, child){\n    var caste = child;\n    child = createSuperMethod(child, parent);\n    shallowMerge(child, caste);\n    shallowMerge(child.prototype, caste.prototype);\n    flush(caste);\n\n    shallowMerge(child, parent);\n\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent instanceof Proto? null : parent.prototype;\n    child.prototype = Object.create(Surrogate.prototype);\n    child.super = parent.prototype;\n    return child;\n  }\n\n\n  // Proto\n  // -----\n\n  function Proto(caste){\n    Proto.size = numInstances++;\n    caste = createSuperMethod(caste, null);\n    caste.prototype.$protoID = Proto.size;\n    caste.prototype.toString = this.toString;\n    caste.prototype.toString = this.toString;\n    caste.prototype.flush = this.flush;\n    caste.overload = this.overload;\n    caste.extends = this.extends;\n    caste.public = this.public;\n    return caste;\n  }\n\n  Proto.size = 0;\n  Proto.create = Object.create;\n  Proto.each = each;\n  Proto.unbindAll = unbindAll;\n  Proto.bindAll = bindAll;\n  Proto.unbind = unbind;\n  Proto.bind = bind;\n  Proto.overload = overload;\n  Proto.copyShallowObjects = copyShallowObjectsFrom;\n  Proto.shallowMerge = shallowMerge;\n  Proto.flush = flush;\n  Proto.keys = keys;\n  Proto.copy = copy;\n  Proto.ape = ape;\n  Proto.isArray = isArray;\n  Proto.isLikeObject = isLikeObject;\n  Proto.isObject = isObject;\n  Proto.isFunction = isFunction;\n  Proto.isString = isString;\n  Proto.merge = bind(merge, null, true);\n\n  Proto.of = function(value, qualified){\n    var type = toStr(value);\n    if(qualified && type === '[object Object]'){\n      return value.constructor.toString().replace(reFnDeclaration, '$1') || 'Object';\n    }\n    return type.replace(reObjectWrapper, '');\n  };\n\n  Proto.prototype = {\n\n    option:function(options){\n      if(isString(options) && this.options){\n        return this.options[options];\n      }else if(isLikeObject(options)){\n        this.options = merge(true, {}, this.defaults, options);\n      }\n      return isLikeObject(this.options)? this.options : {};\n    },\n\n    extends:function(parent){\n      return inherit(Proto, parent, this);\n    },\n\n    public:function(name, definition){\n      if(isString(name)){\n        injectMethod(this.super, this.prototype, definition, name);\n      }else if(isLikeObject(name)){\n        each(name, function(value, key){\n          this.public(key, value);\n        }, this, true);\n      }\n      return this;\n    },\n\n    overload:function(name, fn){\n      overload(this.prototype, name, fn);\n      return this;\n    },\n\n    define:function(){\n      var args = slice(arguments);\n      var definitions = Object.create(null);\n      if(args.length === 2 && isString(args[0])){\n        definitions[args[0]] = args[1];\n      }else if(args.length === 1){\n        definitions = args[0];\n      }\n      Object.defineProperties(this.prototype, definitions);\n      return this;\n    },\n\n    unbindAll:function(){\n      return unbindAll(this, slice(arguments));\n    },\n\n    bindAll:function(){\n      return bindAll(this, slice(arguments));\n    },\n\n    unbind:function(fn){\n      return unbind(fn);\n    },\n\n    bind:function(fn, context){\n      return bind(fn, context || this);\n    },\n\n    flush:function(){\n      flush(this);\n    }\n  };\n\n\n  // Externalize\n  // -----------\n\n  exports[name] = Proto;\n  exports[name].VERSION = version;\n\n  return Proto;\n}));\n",
    "/**\n * @author Adrian C. Miranda <adriancmiranda@gmail.com>\n * @see https://github.com/adriancmiranda/console.js\n * @version 1.0.6\n */\n(function(global, factory){\n  'use strict';\n\n  if(typeof module === 'object' && typeof module.exports === 'object'){\n    global.trace = module.exports = factory(global, true).log;\n  }else{\n    global.trace = factory(global).log;\n  }\n\n}(typeof window !== 'undefined' ? window : this, function(global, nodeEnv){\n  'use strict';\n\n  var debug = global.location && /\\bdebug\\b/i.test(global.location.href);\n  var slice = Array.prototype.slice;\n\n  function wrap(console, method){\n    var output = console[method];\n    console[method] = function(){\n      if(!console.enabled) return void(0);\n      var args = slice.call(arguments);\n      if(console.history.length >= console.scrollback){\n        console.history.shift();\n      }\n      console.history.push({ type:method, message:args });\n      return output && output.apply(console, args);\n    };\n  }\n\n  function Logger(console){\n    var longMessage = '';\n    var methods = 'assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,timeStamp,profile,profileEnd,time,timeEnd,trace,warn,log'.split(',');\n    console.enabled = debug || console.enabled;\n    while(methods.length){\n      wrap(console, methods.pop());\n    }\n    console.push = function(message){\n      longMessage += message +'\\n';\n    };\n    console.flush = function(message){\n      console.log(longMessage);\n      longMessage = '';\n    };\n    return console;\n  }\n\n  function getConsole(limit){\n    try{\n      console.log();\n      global.console.history = [];\n      global.console.scrollback = limit;\n      return global.console;\n    }catch(error){\n      global.console = { history:[], scrollback:limit };\n      return global.console;\n    }\n  }\n\n  return Logger(getConsole(global.console && typeof global.console.scrollback === 'number'?\n    global.console.scrollback : 1\n  ));\n}));\n",
    "'use strict';\n\nvar Ambox = function(states, status){\n  console.log('Ambox created with %o. Status: %o', states, status);\n};\n\nAmbox.prototype = {\n  teste:function(){trace('Ambox.teste: called!');},\n  start:function(){trace('Ambox.start: called!');},\n  load:function(url){trace('Ambox.load(%s)', url);}\n};\n\nmodule.exports = Ambox;\n",
    "'use strict';\n\nrequire('trace');\nrequire('Proto');\n\nvar Aplication = new Proto(function Aplication(states){\n  this.super(states, 'created');\n  this.redditURL = 'http://www.reddit.com/r/perfectloops/top.json?sort=top&t=week';\n  this.start();\n})\n\n.extends(require('./ambox/index'))\n\n.public('load', function(url){\n  console.log('Aplication.load(%s)', url);\n  this.super(url);\n})\n\n.public('start', function(){\n  console.log('Aplication.start');\n  this.super();\n});\n\n\nmodule.exports = new Aplication(require('./portifa/states'));\nconsole.log('-------------------');\nconsole.log('aplication:', module.exports);\nconsole.log('aplication.teste:', module.exports.load('http://teste.com'));\nconsole.log('aplication.teste:', module.exports.teste);\n",
    "module.exports = [{\n  name:'flux',\n  title:'Flux',\n  route:['', '/flux'],\n  templateUrl:'./views/flux.html',\n  // template:'',\n  // module:'',\n  // controller:'app.views.FluxView',\n  // controllerUrl:'',\n  // enabled:false,\n  data:{\n    roles:[]\n  }\n},{\n  name:'archives',\n  title:'Archives',\n  route:'/archives',\n  templateUrl:'./views/archives.html',\n  data:{\n    roles:[]\n  }\n},{\n  name:'contact',\n  title:'Contact',\n  route:'/contact',\n  templateUrl:'./views/contact.html',\n  data:{\n    roles:[]\n  },\n  children:[{\n    name:'developer',\n    title:'Contact Adrian',\n    route:'/dev',\n    templateUrl:'./views/contact.developer.html',\n    data:{\n      roles:[]\n    }\n  },{\n    name:'designer',\n    title:'Contact Andrey',\n    route:'/designer',\n    templateUrl:'./views/contact.designer.html',\n    data:{\n      roles:[]\n    }\n  },{\n    name:'ambox',\n    title:'Contact the brothers',\n    route:'/brothers',\n    templateUrl:'./views/contact.ambox.html',\n    data:{\n      roles:[]\n    }\n  }]\n},{\n  name:'about',\n  title:'About',\n  route:'/about',\n  templateUrl:'./views/about.html',\n  data:{\n    roles:[]\n  }\n},{\n  name:'about.project',\n  title:'About the project',\n  route:'/project',\n  templateUrl:'./views/about.project.html',\n  data:{\n    roles:[]\n  }\n},{\n  name:'about.authors',\n  title:'About the authors',\n  route:'/authors',\n  templateUrl:'./views/about.authors.html',\n  data:{\n    roles:[]\n  }\n},{\n  name:'about.authors.developer',\n  title:'About Adrian',\n  route:'/dev',\n  templateUrl:'./views/about.authors.developer.html',\n  data:{\n    roles:[]\n  }\n},{\n  name:'about.authors.designer',\n  title:'About Andrey',\n  route:'/designer',\n  templateUrl:'./views/about.authors.designer.html',\n  data:{\n    roles:[]\n  }\n}];\n"
  ]
}